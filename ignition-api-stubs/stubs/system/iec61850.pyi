from typing import Any, Dict, List, Optional

from dev.coatl.helper.types import AnyStr

def cancel(deviceName: AnyStr, mapParams: Dict[AnyStr, Any]) -> None: ...
def getControlParams(deviceName: AnyStr) -> List[Dict[AnyStr, Any]]: ...
def listFiles(
    deviceName: AnyStr, remoteFilePath: Optional[AnyStr] = ...
) -> List[AnyStr]: ...
def operate(
    deviceName: AnyStr, mapParams: Dict[AnyStr, Any], controlValue: float
) -> None: ...
def readFile(
    deviceName: AnyStr, remoteFilePath: AnyStr, localFilePath: AnyStr
) -> None: ...
def select(deviceName: AnyStr, mapParams: Dict[AnyStr, Any], value: float) -> None: ...
def writeFile(
    deviceName: AnyStr, localFilePath: AnyStr, remoteFilePath: AnyStr
) -> None: ...
