from typing import Any, List, Optional

from dev.coatl.helper.types import AnyStr
from java.lang import Object
from java.util import Locale

class LocaleUtils(Object):
    @staticmethod
    def getAvailableLocales(andRegionalVariants: bool) -> List[Locale]: ...
    @staticmethod
    def parseLocale(locale: AnyStr) -> Optional[Locale]: ...

class LocalizedString(Object):
    def __init__(self, *args: Any) -> None: ...
    def compareTo(self, other: LocalizedString) -> int: ...
    @staticmethod
    def createRaw(stringVal: AnyStr) -> LocalizedString: ...
    def getDefaultVal(self) -> AnyStr: ...
    def getKey(self) -> AnyStr: ...
    def getParams(self) -> List[Object]: ...
    def setDefaultVal(self, defaultVal: AnyStr) -> None: ...
    def setKey(self, key: AnyStr) -> None: ...
    def setParams(self, params: List[Object]) -> None: ...
    def toString(self, locale: Optional[Locale] = ...) -> AnyStr: ...
