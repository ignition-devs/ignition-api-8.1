from dev.coatl.helper.types import AnyStr as AnyStr

class LittleEndianInput:
    def available(self) -> int: ...
    def readByte(self) -> int: ...
    def readDouble(self) -> float: ...
    def readFully(self, buf: bytearray, off: int = ..., len: int = ...) -> None: ...
    def readInt(self) -> int: ...
    def readLong(self) -> long: ...
    def readPlain(
        self, buf: bytearray, offset: int = ..., length: int = ...
    ) -> None: ...
    def readShort(self) -> int: ...
    def readUByte(self) -> int: ...
    def readUShort(self) -> int: ...

class LittleEndianOutput:
    def write(self, b: bytearray, offset: int = ..., length: int = ...) -> None: ...
    def writeByte(self, value: int) -> None: ...
    def writeDouble(self, value: float) -> None: ...
    def writeInt(self, value: int) -> None: ...
    def writeShort(self, value: int) -> None: ...
    def writeUTF(self, value: AnyStr) -> None: ...
